
name: Reusable CI/CD Jobs Workflow

on:
  workflow_call:
    inputs:
      DOCKERFILE_PATH:
        description: 'Path to the Dockerfile'
        required: true
        type: string
      IMAGE_NAME:
        description: 'Name of the Docker image'
        required: true
        type: string
      DEV_IMAGE_NAME:
        description: 'Name of the Development Docker image'
        required: false
        type: string
      BUILD_ARM:
        description: 'Flag to enable ARM build'
        required: false
        type: boolean
    secrets:
      CI_REGISTRY_PASSWORD:
        required: true
      CI_REGISTRY_USER:
        required: true

env:
  DOCKER_BUILDKIT: 1
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CI_IMAGE_REPO: ghcr.io/${{ github.repository }}/ci

jobs:
  build-baserow-image:
    name: Build Baserow Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        run: echo "${{ secrets.CI_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.CI_REGISTRY_USER }}" --password-stdin ghcr.io

      - name: Build Docker Image
        run: |
          if [[ -z "${{ inputs.DOCKERFILE_PATH }}" ]]; then
              echo "DOCKERFILE_PATH is required"
              exit 1
          fi
          if [[ -z "${{ inputs.IMAGE_NAME }}" ]]; then
              echo "IMAGE_NAME is required"
              exit 1
          fi
          TRUNCATED_BRANCH_NAME=$(echo "${{ github.ref_name }}" | cut -c1-100 | sed 's/\//-/g')
          CI_DEV_LATEST_BRANCH_TAG=ci-latest-$TRUNCATED_BRANCH_NAME
          LATEST_BRANCH_CI_IMAGE=${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:$CI_DEV_LATEST_BRANCH_TAG
          CACHE_FROM_BUILD_ARGS=""
          EXTRA_BUILD_ARGS=""

          if [[ "${{ inputs.BUILD_ARM }}" == "true" ]]; then
            echo "Building for ARM architecture"
            DOCKER_BUILD_PLATFORMS=linux/amd64,linux/arm64/v8
          else
            DOCKER_BUILD_PLATFORMS=linux/amd64
          fi

          docker buildx build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --platform=$DOCKER_BUILD_PLATFORMS \
            $CACHE_FROM_BUILD_ARGS \
            $EXTRA_BUILD_ARGS \
            --push \
            --target dev \
            --tag ${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:${{ github.sha }} \
            -f ${{ inputs.DOCKERFILE_PATH }} .

  build-final-baserow-image:
    name: Build Final Baserow Image
    runs-on: ubuntu-latest
    needs: build-baserow-image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        run: echo "${{ secrets.CI_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.CI_REGISTRY_USER }}" --password-stdin ghcr.io

      - name: Build Final Image
        run: |
          if [[ -z "${{ inputs.DOCKERFILE_PATH }}" ]]; then
              echo "DOCKERFILE_PATH is required"
              exit 1
          fi
          if [[ -z "${{ inputs.IMAGE_NAME }}" ]]; then
              echo "IMAGE_NAME is required"
              exit 1
          fi
          TARGET_NON_DEV_IMAGE_PATH=${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:ci-tested-${{ github.sha }}

          docker buildx build \
            --platform=linux/amd64 \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:${{ github.sha }} \
            --push \
            --tag $TARGET_NON_DEV_IMAGE_PATH \
            -f ${{ inputs.DOCKERFILE_PATH }} .

  docker-image-test-stage:
    name: Docker Image Test Stage
    runs-on: ubuntu-latest
    needs: build-final-baserow-image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Docker Test Image
        run: |
          docker run --rm ${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:${{ github.sha }} test

  publish-baserow-image:
    name: Publish Baserow Image
    runs-on: ubuntu-latest
    needs: docker-image-test-stage
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Registry
        run: echo "${{ secrets.CI_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.CI_REGISTRY_USER }}" --password-stdin ghcr.io

      - name: Push to Docker Registry
        run: |
          TARGET_IMAGE=${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:latest
          docker tag ${{ env.CI_IMAGE_REPO }}/${{ inputs.IMAGE_NAME }}:${{ github.sha }} $TARGET_IMAGE
          docker push $TARGET_IMAGE
